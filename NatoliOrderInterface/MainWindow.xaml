<Window x:Class="NatoliOrderInterface.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NatoliOrderInterface"
        DataContext="{Binding RelativeSource={RelativeSource self}}"
        x:Name="GridWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="1000" Width="1800" Margin="0" 
        Closing="GridWindow_Closing" Activated="GridWindow_Activated" Deactivated="GridWindow_Deactivated" 
        AllowDrop="True" StateChanged="GridWindow_StateChanged" Loaded="GridWindow_Loaded" ContentRendered="GridWindow_ContentRendered" 
        LayoutUpdated="GridWindow_LayoutUpdated" UseLayoutRounding="True" PreviewKeyUp="GridWindow_PreviewKeyUp" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}">
    <Window.Resources>
        
        <Style TargetType="Expander">
            <Setter Property="Template" Value="{StaticResource ExpanderControlTemplate1}"/>
        </Style>
        <!--<Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>-->
        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Background" Value="#FFF0F0F0"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="CanContentScroll" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="SearchBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0,5,2,2"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Text" Value="Search here..."/>
            <Setter Property="Cursor" Value="IBeam"/>
        </Style>
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="0,5,2,2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="{DynamicResource searchDrawingImage}" Width="20"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="6" Background="Transparent">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,0,0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Button.IsMouseHover.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource Button.IsPressed.Background}"/>
                                <Setter Property="Foreground" Value="#FF2E343C" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource Button.IsEnabled.False.Background}">
                                </Setter>
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>                    
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FuzzySearchWithSuggestions" TargetType="ContentControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Medium}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid VerticalAlignment="Top" Margin="0,5,0,0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border BorderBrush="{StaticResource Dark}" BorderThickness="0,0,0,1">

                                </Border>
                                <TextBox x:Name="FuzzySearchTextBox" Style="{StaticResource TextBox}" TextChanged="FuzzySearchTextBox_TextChanged" Grid.Row="0" KeyUp="FuzzySearchTextBox_KeyUp"/>
                                <Canvas Grid.Row="1">
                                    <ListBox x:Name="FuzzySearchListBox" Height="Auto" Width="Auto" Visibility="Collapsed" ClipToBounds="False" Grid.Row="1" MouseDoubleClick="FuzzySearchListBox_MouseDoubleClick"/>
                                </Canvas>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel x:Name="MainDock" LastChildFill="True">
        <Grid x:Name="MenuGrid" DockPanel.Dock="Top" Background="{Binding Background, ElementName=MainMenu}" DockPanel.ZIndex="2" AllowDrop="False">
                <WrapPanel>
                <DockPanel x:Name="MenuDock" Height="30" LastChildFill="False">
                    <Menu DockPanel.Dock="Left" x:Name="MainMenu" Height="30" HorizontalContentAlignment="Center" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" Foreground="{StaticResource Dark}">
                        <MenuItem Name="InitializingMenuItem" Header="Initializing... Please Wait" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="{Binding Height, ElementName=MainMenu}"/>
                    </Menu>
                    <Button Name="NotificationButton" DockPanel.Dock="Left" Style="{StaticResource ShakeButtonIcon}" Tag="{StaticResource bellDrawingImage}" Background="Transparent" BorderThickness="0" Click="NotificationsMenu_Click" ToolTip="Notifications"/>
                    <Button x:Name="RefreshButton" DockPanel.Dock="Left" Style="{StaticResource RotateButtonIcon}" Tag="{StaticResource refresh_doubleDrawingImage}" Background="Transparent" BorderThickness="0" Click="ForceRefresh_Click" ToolTip="Refresh"/>
                    <Button x:Name="AddModuleButton" DockPanel.Dock="Left" Style="{StaticResource ButtonIcon}" Tag="{StaticResource add_item_altDrawingImage}" Background="Transparent" BorderThickness="0" Click="AddModule_Click"/>
                    <!--<Button x:Name="AddModuleButton" DockPanel.Dock="Left" Style="{StaticResource AddModuleButton}" Background="Transparent" BorderThickness="0" Click="AddModule_Click" AllowDrop="True"/>-->
                    <Button x:Name="RemoveModuleButton" DockPanel.Dock="Left" Style="{StaticResource ButtonIcon}" Tag="{StaticResource trashDrawingImage}" Background="Transparent" BorderThickness="0" AllowDrop="True" IsEnabled="False"/>
                    <!--<Button x:Name="RemoveModuleButton" DockPanel.Dock="Left" Style="{StaticResource TrashButton}" Tag="{StaticResource trashDrawingImage}" Background="Transparent" BorderThickness="0" Foreground="{StaticResource Dark}" AllowDrop="True"/>-->
                    <TextBox x:Name="ZoomTextBox" Text="100%" Height="20" VerticalAlignment="Center" Margin="0,0,4,0" Width="40" LostFocus="ZoomTextBox_LostFocus"/>
                    <TextBox x:Name="ModuleHeightTextBox" Text="11" Height="20" VerticalAlignment="Center" Margin="0,0,4,0" Width="30" MouseWheel="ModuleHeightTextBox_MouseWheel" ToolTip="Number of Rows in Module"/>
                </DockPanel>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <DockPanel HorizontalAlignment="Right" MaxHeight="90">
                            <Border BorderBrush="LightGray" BorderThickness="1,0,0,0" Margin="0,2,0,2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="250"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Customer" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center" Grid.Column="0" Margin="5,0"/>
                                    <Canvas Grid.Column="1" VerticalAlignment="Top">
                                        <ContentControl x:Name="CustomerSearchListBox" Style="{StaticResource FuzzySearchWithSuggestions}" Panel.ZIndex="1"/>
                                    </Canvas>
                                    <!--<TextBox x:Name="CustomerSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0" Width="120"/>-->
                                </Grid>
                            </Border>
                            <Grid Width="110" Margin="8,0,5,0">
                                <Button x:Name="CustomerSearchButton" Style="{StaticResource Button}" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Content="View Customer" Click="ProjectSearchButton_Click"/>
                            </Grid>
                        </DockPanel>
                        <DockPanel HorizontalAlignment="Right" MaxHeight="90" MaxWidth="1240">
                            <Border BorderBrush="LightGray" BorderThickness="1,0,0,0" Margin="0,2,0,2">
                                <StackPanel Orientation="Horizontal" Margin="8,0,5,0">
                                    <TextBlock Text="Project#" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                                    <TextBox x:Name="ProjectSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,2,0" Width="50" PreviewKeyDown="ProjectSearchTextBlock_PreviewKeyDown" LostFocus="ProjectSearchTextBlock_LostFocus" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                                    <TextBlock Text="-" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                                    <TextBox x:Name="ProjectRevNoSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,-5,0" Width="20" PreviewKeyDown="ProjectSearchTextBlock_PreviewKeyDown" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                                    <Grid Width="110">
                                        <Button x:Name="ProjectSearchButton" Style="{StaticResource Button}" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Content="Open Project" Click="ProjectSearchButton_Click"/>
                                    </Grid>
                                </StackPanel>
                            </Border>
                            <Border BorderBrush="LightGray" BorderThickness="1,0,1,0" Margin="0,2,0,2">
                                <StackPanel Orientation="Horizontal" Margin="8,0,5,0">
                                    <TextBlock Text="Quote#" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                                    <TextBox x:Name="QuoteSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,2,0" Width="50" PreviewKeyDown="QuoteSearchTextBlock_PreviewKeyDown" LostFocus="QuoteSearchTextBlock_LostFocus" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                                    <TextBlock Text="-" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                                    <TextBox x:Name="QuoteRevNoSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,-5,0" Width="20" PreviewKeyDown="QuoteSearchTextBlock_PreviewKeyDown" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                                    <Grid Width="110">
                                        <Button x:Name="QuoteSearchButton" Style="{StaticResource Button}" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Content="Open Quote" Click="QuoteSearchButton_Click"/>
                                    </Grid>
                                </StackPanel>
                            </Border>
                            <StackPanel Orientation="Horizontal" Margin="8,0,5,0">
                                <TextBlock Text="Order#" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                                <TextBox x:Name="OrderSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,-5,0" Width="50" PreviewKeyDown="OrderSearchTextBlock_PreviewKeyDown" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                                <Grid Width="110">
                                    <Button x:Name="OrderSearchButton" Style="{StaticResource Button}" Content="Open Order" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Click="OrderSearchButton_Click"/>
                                </Grid>
                            </StackPanel>
                        </DockPanel>
                    </WrapPanel>
            </WrapPanel>
        </Grid>

        <!--<Viewbox>-->
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                <Border x:Name="WrapPanelBorder">
                    <Border.LayoutTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Border.LayoutTransform>
                    <WrapPanel Grid.IsSharedSizeScope="True" Orientation="Vertical" x:Name="MainWrapPanel" AllowDrop="True">
                    </WrapPanel>
                </Border>
            </ScrollViewer>
        <!--</Viewbox>-->

        <!--<Grid x:Name="MainGrid" ShowGridLines="False" Margin="0,0,0,0" DockPanel.ZIndex="1">
            <Image x:Name="LoadingAnimation" gif:ImageBehavior.AnimatedSource="/NATOLI_ANIMATION.gif" HorizontalAlignment="Center" VerticalAlignment="Center" MaxHeight="300" MaxWidth="{Binding ActualWidth, ElementName=GridWindow}"/>   xmlns:gif="http://wpfanimatedgif.codeplex.com"  WpfAnimatedGif -->
            <!--
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            
        </Grid>-->
        
    </DockPanel>
</Window>
