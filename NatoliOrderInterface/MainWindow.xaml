<Window x:Class="NatoliOrderInterface.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NatoliOrderInterface"
        x:Name="GridWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="1000" Width="1800" Margin="0" Closing="GridWindow_Closing" Activated="GridWindow_Activated" AllowDrop="True" StateChanged="GridWindow_StateChanged" Loaded="GridWindow_Loaded" ContentRendered="GridWindow_ContentRendered" LayoutUpdated="GridWindow_LayoutUpdated" Drop="GridWindow_Drop" UseLayoutRounding="True">
    <Window.Resources>
        <ControlTemplate x:Key="ExpanderControlTemplate1" TargetType="{x:Type Expander}">
            <Border BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="True">
                <DockPanel>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSite" Height="22" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1,0" MinWidth="0" MinHeight="0" Padding="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ToggleButton.FocusVisualStyle>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border>
                                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.FocusVisualStyle>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Padding="{TemplateBinding Padding}">
                                                    <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="16" Stroke="#FF333333" VerticalAlignment="Center" Width="16" Grid.Column="0"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center" Grid.Column="0"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                        <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                        <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                        <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                        <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                        <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                        <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                        <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton x:Name="Site" Height="22" Grid.Column="0" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0" MinWidth="0" MinHeight="0" Padding="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <!-- IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"-->
                                <ToggleButton.FocusVisualStyle>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.FocusVisualStyle>
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CheckBox x:Name="checkbox" HorizontalAlignment="Center" SnapsToDevicePixels="False" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" IsChecked="False" Checked="Checkbox_Checked" Unchecked="Checkbox_Unchecked" LayoutTransform="0.7,0,0,0.7,0,0"/>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <!--<Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="IsChecked" TargetName="checkbox" Value="True"/>
                                                        </Trigger>-->
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Grid>
                    </Grid>
                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="Expander">
            <Setter Property="Template" Value="{StaticResource ExpanderControlTemplate1}"/>
        </Style>
        <!--<Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>-->
        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Background" Value="#FFF0F0F0"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="CanContentScroll" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="SearchBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0,5,2,2"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Text" Value="Search here..."/>
            <Setter Property="Cursor" Value="IBeam"/>
        </Style>
        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="0,5,2,2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="{StaticResource magnifying_glassDrawingImage}" Width="20"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="6" Background="Transparent">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,0,0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Button.IsMouseHover.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource Button.IsPressed.Background}"/>
                                <Setter Property="Foreground" Value="#FF2E343C" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource Button.IsEnabled.False.Background}">
                                </Setter>
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>                    
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel x:Name="MainDock">
        <Grid x:Name="MenuGrid" DockPanel.Dock="Top" Background="{Binding Background, ElementName=MainMenu}">
            
            <Menu x:Name="MainMenu" Height="30" HorizontalContentAlignment="Center" Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" Foreground="{StaticResource ForeGround.StandardBrush}">
                <MenuItem Name="InitializingMenuItem" Header="Initializing... Please Wait" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="{Binding Height, ElementName=MainMenu}"/>
                <!--<Image Source="{StaticResource Bell_With_LayersDrawingImage}" Margin="3"/>-->
            </Menu>
            <DockPanel HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" Margin="5,0">
                    <TextBlock Text="Project#" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                    <TextBox x:Name="ProjectSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,2,0" Width="50" PreviewKeyDown="ProjectSearchTextBlock_PreviewKeyDown" LostFocus="ProjectSearchTextBlock_LostFocus" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                    <TextBlock Text="-" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                    <TextBox x:Name="ProjectRevNoSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,-5,0" Width="20" PreviewKeyDown="ProjectSearchTextBlock_PreviewKeyDown" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                    <Grid Width="110">
                        <Button x:Name="ProjectSearchButton" Style="{StaticResource Button}" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Content="Open Project" Click="ProjectSearchButton_Click"/>
                    </Grid>
                </StackPanel>
                <Border BorderBrush="LightGray" BorderThickness="1,0,1,0" Margin="0,2,0,2">
                    <StackPanel Orientation="Horizontal" Margin="8,0,5,0">
                        <TextBlock Text="Quote#" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                        <TextBox x:Name="QuoteSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,2,0" Width="50" PreviewKeyDown="QuoteSearchTextBlock_PreviewKeyDown" LostFocus="QuoteSearchTextBlock_LostFocus" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                        <TextBlock Text="-" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                        <TextBox x:Name="QuoteRevNoSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,-5,0" Width="20" PreviewKeyDown="QuoteSearchTextBlock_PreviewKeyDown" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                    <Grid Width="110">
                        <Button x:Name="QuoteSearchButton" Style="{StaticResource Button}" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Content="Open Quote" Click="QuoteSearchButton_Click"/>
                    </Grid>
                    </StackPanel>
                </Border>
                <StackPanel Orientation="Horizontal" Margin="8,0,5,0">
                    <TextBlock Text="Order#" Style="{StaticResource NormalTextBlock}" VerticalAlignment="Center"/>
                    <TextBox x:Name="OrderSearchTextBlock" Style="{StaticResource TextBox}" DockPanel.Dock="Top" Margin="2,0,-5,0" Width="50" PreviewKeyDown="OrderSearchTextBlock_PreviewKeyDown" GotFocus="QuoterevNoSearchTextBlock_GotFocus" GotMouseCapture="QuoterevNoSearchTextBlock_GotMouseCapture" IsMouseCaptureWithinChanged="QuoterevNoSearchTextBlock_IsMouseCaptureWithinChanged"/>
                    <Grid Width="110">
                        <Button x:Name="OrderSearchButton" Style="{StaticResource Button}" Content="Open Order" Margin="10,0,5,0" VerticalAlignment="Center" MinHeight="22" FontSize="12" Click="OrderSearchButton_Click"/>
                    </Grid>
                </StackPanel>
            </DockPanel>
        </Grid>

        <Grid x:Name="MainGrid" ShowGridLines="False" Margin="0,0,0,0">
            <!--<Image x:Name="LoadingAnimation" gif:ImageBehavior.AnimatedSource="/NATOLI_ANIMATION.gif" HorizontalAlignment="Center" VerticalAlignment="Center" MaxHeight="300" MaxWidth="{Binding ActualWidth, ElementName=GridWindow}"/>   xmlns:gif="http://wpfanimatedgif.codeplex.com"  WpfAnimatedGif -->
            <!--
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            -->
            </Grid>
        
    </DockPanel>
</Window>
